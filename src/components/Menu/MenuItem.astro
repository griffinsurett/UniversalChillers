---
// src/components/Menu/MenuItem.astro
import {
  getMenuId,
  getMenuLink,
  getChildItems,
  hasMenuChildren,
  isActive,
} from "@/utils/menuUtils.js";
import Submenu from "./Submenu.astro";
import Button from "@/components/Button/Button.jsx";

const {
  item,
  allItems,
  itemClass = "",
  linkClass = "",
  hierarchical = false,
  collectionName,
  submenu = {
    component: null,
    itemsClass: "",
    subMenuItem: {
      component: null,
      props: {
        itemClass: "",
        linkClass: "",
        hierarchical: true,
        subMenuItem: null,
      },
    },
  },
} = Astro.props;

const thisId      = getMenuId(item);
const childItems  = getChildItems(thisId, allItems);
const hasChildren = hasMenuChildren(item, allItems, hierarchical);
const SubmenuComp = submenu.component ?? Submenu;

const currentPath = Astro.url.pathname;
const link        = getMenuLink(item, collectionName);
const active      = isActive(currentPath, link);
---
<li role="none" class={`group relative menu-item ${itemClass}`}>
  <Button
    as="a"
    href={link}
    variant={active ? "link" : "linkNoIcon"}
    className={linkClass}
    aria-current={active ? "page" : undefined}
    rel="noopener noreferrer"
    role="menuitem"
    aria-haspopup={hasChildren ? "true" : undefined}
    tabindex="0"
  >
    {item.data.icon && (
      <img
        src={item.data.icon}
        alt=""
        class="w-5 h-5 bg-[var(--color-accent)] rounded-full"
        aria-hidden="true"
      />
    )}
    <span>{item.data.title}</span>
    {hasChildren && (
      <span class="submenu-arrow inline-block ml-1" aria-hidden="true">
        â–¼
      </span>
    )}
  </Button>

  {hasChildren && (
    <SubmenuComp
      allItems={allItems}
      parentId={thisId}
      childItems={childItems}
      submenu={submenu}
      collectionName={collectionName}
    />
  )}
</li>
